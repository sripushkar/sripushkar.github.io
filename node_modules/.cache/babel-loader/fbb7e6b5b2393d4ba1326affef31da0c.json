{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/srijulapally/Projects/Web Dev/sripushkar.github.io/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/Users/srijulapally/Projects/Web Dev/sripushkar.github.io/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/srijulapally/Projects/Web Dev/sripushkar.github.io/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/srijulapally/Projects/Web Dev/sripushkar.github.io/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/srijulapally/Projects/Web Dev/sripushkar.github.io/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Canvas_1 = require(\"./Canvas\");\n\nvar Particles_1 = require(\"./Particles\");\n\nvar Retina_1 = require(\"./Retina\");\n\nvar FrameManager_1 = require(\"./FrameManager\");\n\nvar Options_1 = require(\"../Options/Classes/Options\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Container = /*#__PURE__*/function () {\n  function Container(id, sourceOptions) {\n    _classCallCheck(this, Container);\n\n    this.id = id;\n    this.sourceOptions = sourceOptions;\n    this.firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this.paused = true;\n    this.lastFrameTime = 0;\n    this.pageHidden = false;\n    this.retina = new Retina_1.Retina(this);\n    this.canvas = new Canvas_1.Canvas(this);\n    this.particles = new Particles_1.Particles(this);\n    this.drawer = new FrameManager_1.FrameManager(this);\n    this.noise = {\n      generate: function generate() {\n        return {\n          angle: Math.random() * Math.PI * 2,\n          length: Math.random()\n        };\n      },\n      init: function init() {},\n      update: function update() {}\n    };\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.bubble = {};\n    this.repulse = {\n      particles: []\n    };\n    this.attract = {\n      particles: []\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this.density = 1;\n    this.options = new Options_1.Options();\n\n    for (var _len = arguments.length, presets = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      presets[_key - 2] = arguments[_key];\n    }\n\n    for (var _i = 0, _presets = presets; _i < _presets.length; _i++) {\n      var preset = _presets[_i];\n      this.options.load(Utils_1.Plugins.getPreset(preset));\n    }\n\n    var shapes = Utils_1.Plugins.getSupportedShapes();\n\n    var _iterator = _createForOfIteratorHelper(shapes),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var type = _step.value;\n        var drawer = Utils_1.Plugins.getShapeDrawer(type);\n\n        if (drawer) {\n          this.drawers.set(type, drawer);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (this.sourceOptions) {\n      this.options.load(this.sourceOptions);\n    }\n\n    this.fpsLimit = this.options.fpsLimit > 0 ? this.options.fpsLimit : 60;\n    this.options.setTheme(undefined);\n    this.eventListeners = new Utils_1.EventListeners(this);\n  }\n\n  _createClass(Container, [{\n    key: \"play\",\n    value: function play(force) {\n      var needsUpdate = this.paused || force;\n\n      if (this.firstStart && !this.options.autoPlay) {\n        this.firstStart = false;\n        return;\n      }\n\n      if (this.paused) {\n        this.paused = false;\n      }\n\n      if (needsUpdate) {\n        var _iterator2 = _createForOfIteratorHelper(this.plugins),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n                plugin = _step2$value[1];\n\n            if (plugin.play) {\n              plugin.play();\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        this.lastFrameTime = performance.now();\n      }\n\n      this.draw();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this.drawAnimationFrame !== undefined) {\n        Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n        delete this.drawAnimationFrame;\n      }\n\n      if (this.paused) {\n        return;\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(this.plugins),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              plugin = _step3$value[1];\n\n          if (plugin.pause) {\n            plugin.pause();\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      if (!this.pageHidden) {\n        this.paused = true;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _this = this;\n\n      this.drawAnimationFrame = Utils_1.Utils.animate(function (timestamp) {\n        return _this.drawer.nextFrame(timestamp);\n      });\n    }\n  }, {\n    key: \"getAnimationStatus\",\n    value: function getAnimationStatus() {\n      return !this.paused;\n    }\n  }, {\n    key: \"setNoise\",\n    value: function setNoise(noiseOrGenerator, init, update) {\n      if (!noiseOrGenerator) {\n        return;\n      }\n\n      if (typeof noiseOrGenerator === \"function\") {\n        this.noise.generate = noiseOrGenerator;\n\n        if (init) {\n          this.noise.init = init;\n        }\n\n        if (update) {\n          this.noise.update = update;\n        }\n      } else {\n        if (noiseOrGenerator.generate) {\n          this.noise.generate = noiseOrGenerator.generate;\n        }\n\n        if (noiseOrGenerator.init) {\n          this.noise.init = noiseOrGenerator.init;\n        }\n\n        if (noiseOrGenerator.update) {\n          this.noise.update = noiseOrGenerator.update;\n        }\n      }\n    }\n  }, {\n    key: \"densityAutoParticles\",\n    value: function densityAutoParticles() {\n      if (!this.options.particles.number.density.enable) {\n        return;\n      }\n\n      this.initDensityFactor();\n      var numberOptions = this.options.particles.number;\n      var optParticlesNumber = numberOptions.value;\n      var optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n      var particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n      var particlesCount = this.particles.count;\n\n      if (particlesCount < particlesNumber) {\n        this.particles.push(Math.abs(particlesNumber - particlesCount));\n      } else if (particlesCount > particlesNumber) {\n        this.particles.removeQuantity(particlesCount - particlesNumber);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stop();\n      this.canvas.destroy();\n\n      var _iterator4 = _createForOfIteratorHelper(this.drawers),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              drawer = _step4$value[1];\n\n          if (drawer.destroy) {\n            drawer.destroy(this);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(this.drawers.keys()),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var key = _step5.value;\n          this.drawers.delete(key);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.destroyed = true;\n    }\n  }, {\n    key: \"exportImg\",\n    value: function exportImg(callback) {\n      this.exportImage(callback);\n    }\n  }, {\n    key: \"exportImage\",\n    value: function exportImage(callback, type, quality) {\n      var _a;\n\n      return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n  }, {\n    key: \"exportConfiguration\",\n    value: function exportConfiguration() {\n      return JSON.stringify(this.options, undefined, 2);\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.stop();\n                _context.next = 3;\n                return this.start();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this.started) {\n        return;\n      }\n\n      this.firstStart = true;\n      this.started = false;\n      this.eventListeners.removeListeners();\n      this.pause();\n      this.particles.clear();\n      this.canvas.clear();\n\n      var _iterator6 = _createForOfIteratorHelper(this.plugins),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _step6$value = _slicedToArray(_step6.value, 2),\n              plugin = _step6$value[1];\n\n          if (plugin.stop) {\n            plugin.stop();\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      var _iterator7 = _createForOfIteratorHelper(this.plugins.keys()),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var key = _step7.value;\n          this.plugins.delete(key);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      this.particles.linksColors = new Map();\n      delete this.particles.grabLineColor;\n      delete this.particles.linksColor;\n    }\n  }, {\n    key: \"loadTheme\",\n    value: function loadTheme(name) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.options.setTheme(name);\n                _context2.next = 3;\n                return this.refresh();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _iterator8, _step8, _step8$value, plugin;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.started) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.next = 4;\n                return this.init();\n\n              case 4:\n                this.started = true;\n                this.eventListeners.addListeners();\n                _iterator8 = _createForOfIteratorHelper(this.plugins);\n                _context3.prev = 7;\n\n                _iterator8.s();\n\n              case 9:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                _step8$value = _slicedToArray(_step8.value, 2), plugin = _step8$value[1];\n\n                if (!(plugin.startAsync !== undefined)) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                _context3.next = 14;\n                return plugin.startAsync();\n\n              case 14:\n                _context3.next = 17;\n                break;\n\n              case 16:\n                if (plugin.start !== undefined) {\n                  plugin.start();\n                }\n\n              case 17:\n                _context3.next = 9;\n                break;\n\n              case 19:\n                _context3.next = 24;\n                break;\n\n              case 21:\n                _context3.prev = 21;\n                _context3.t0 = _context3[\"catch\"](7);\n\n                _iterator8.e(_context3.t0);\n\n              case 24:\n                _context3.prev = 24;\n\n                _iterator8.f();\n\n                return _context3.finish(24);\n\n              case 27:\n                this.play();\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[7, 21, 24, 27]]);\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var availablePlugins, _iterator9, _step9, _step9$value, id, plugin, _iterator10, _step10, _step10$value, drawer, _iterator11, _step11, _step11$value, _plugin;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.retina.init();\n                this.canvas.init();\n                this.fpsLimit = this.options.fpsLimit > 0 ? this.options.fpsLimit : 60;\n                availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n                _iterator9 = _createForOfIteratorHelper(availablePlugins);\n\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    _step9$value = _slicedToArray(_step9.value, 2), id = _step9$value[0], plugin = _step9$value[1];\n                    this.plugins.set(id, plugin);\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n\n                _iterator10 = _createForOfIteratorHelper(this.drawers);\n                _context4.prev = 7;\n\n                _iterator10.s();\n\n              case 9:\n                if ((_step10 = _iterator10.n()).done) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                _step10$value = _slicedToArray(_step10.value, 2), drawer = _step10$value[1];\n\n                if (!drawer.init) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                _context4.next = 14;\n                return drawer.init(this);\n\n              case 14:\n                _context4.next = 9;\n                break;\n\n              case 16:\n                _context4.next = 21;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t0 = _context4[\"catch\"](7);\n\n                _iterator10.e(_context4.t0);\n\n              case 21:\n                _context4.prev = 21;\n\n                _iterator10.f();\n\n                return _context4.finish(21);\n\n              case 24:\n                _iterator11 = _createForOfIteratorHelper(this.plugins);\n                _context4.prev = 25;\n\n                _iterator11.s();\n\n              case 27:\n                if ((_step11 = _iterator11.n()).done) {\n                  _context4.next = 38;\n                  break;\n                }\n\n                _step11$value = _slicedToArray(_step11.value, 2), _plugin = _step11$value[1];\n\n                if (!_plugin.init) {\n                  _context4.next = 33;\n                  break;\n                }\n\n                _plugin.init(this.options);\n\n                _context4.next = 36;\n                break;\n\n              case 33:\n                if (!(_plugin.initAsync !== undefined)) {\n                  _context4.next = 36;\n                  break;\n                }\n\n                _context4.next = 36;\n                return _plugin.initAsync(this.options);\n\n              case 36:\n                _context4.next = 27;\n                break;\n\n              case 38:\n                _context4.next = 43;\n                break;\n\n              case 40:\n                _context4.prev = 40;\n                _context4.t1 = _context4[\"catch\"](25);\n\n                _iterator11.e(_context4.t1);\n\n              case 43:\n                _context4.prev = 43;\n\n                _iterator11.f();\n\n                return _context4.finish(43);\n\n              case 46:\n                this.canvas.windowResize();\n                this.particles.init();\n\n              case 48:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[7, 18, 21, 24], [25, 40, 43, 46]]);\n      }));\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor() {\n      var densityOptions = this.options.particles.number.density;\n\n      if (!this.canvas.element || !densityOptions.enable) {\n        return;\n      }\n\n      var canvas = this.canvas.element;\n      var pxRatio = this.retina.pixelRatio;\n      this.density = canvas.width * canvas.height / (densityOptions.factor * pxRatio * pxRatio * densityOptions.area);\n    }\n  }]);\n\n  return Container;\n}();\n\nexports.Container = Container;","map":{"version":3,"sources":["/Users/srijulapally/Projects/Web Dev/sripushkar.github.io/node_modules/tsparticles/dist/Core/Container.js"],"names":["Object","defineProperty","exports","value","Container","tslib_1","require","Canvas_1","Particles_1","Retina_1","FrameManager_1","Options_1","Utils_1","id","sourceOptions","firstStart","started","destroyed","paused","lastFrameTime","pageHidden","retina","Retina","canvas","Canvas","particles","Particles","drawer","FrameManager","noise","generate","angle","Math","random","PI","length","init","update","interactivity","mouse","clicking","inside","bubble","repulse","attract","plugins","Map","drawers","density","options","Options","presets","preset","load","Plugins","getPreset","shapes","getSupportedShapes","type","getShapeDrawer","set","fpsLimit","setTheme","undefined","eventListeners","EventListeners","force","needsUpdate","autoPlay","plugin","play","performance","now","draw","drawAnimationFrame","Utils","cancelAnimation","pause","animate","timestamp","nextFrame","noiseOrGenerator","number","enable","initDensityFactor","numberOptions","optParticlesNumber","optParticlesLimit","limit","particlesNumber","min","particlesCount","count","push","abs","removeQuantity","stop","destroy","keys","key","delete","callback","exportImage","quality","_a","element","toBlob","JSON","stringify","__awaiter","start","removeListeners","clear","linksColors","grabLineColor","linksColor","name","refresh","addListeners","startAsync","availablePlugins","getAvailablePlugins","initAsync","windowResize","densityOptions","pxRatio","pixelRatio","width","height","factor","area"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Canvas_1 = require(\"./Canvas\");\nconst Particles_1 = require(\"./Particles\");\nconst Retina_1 = require(\"./Retina\");\nconst FrameManager_1 = require(\"./FrameManager\");\nconst Options_1 = require(\"../Options/Classes/Options\");\nconst Utils_1 = require(\"../Utils\");\nclass Container {\n    constructor(id, sourceOptions, ...presets) {\n        this.id = id;\n        this.sourceOptions = sourceOptions;\n        this.firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this.paused = true;\n        this.lastFrameTime = 0;\n        this.pageHidden = false;\n        this.retina = new Retina_1.Retina(this);\n        this.canvas = new Canvas_1.Canvas(this);\n        this.particles = new Particles_1.Particles(this);\n        this.drawer = new FrameManager_1.FrameManager(this);\n        this.noise = {\n            generate: () => {\n                return {\n                    angle: Math.random() * Math.PI * 2,\n                    length: Math.random(),\n                };\n            },\n            init: () => {\n            },\n            update: () => {\n            },\n        };\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.bubble = {};\n        this.repulse = { particles: [] };\n        this.attract = { particles: [] };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this.density = 1;\n        this.options = new Options_1.Options();\n        for (const preset of presets) {\n            this.options.load(Utils_1.Plugins.getPreset(preset));\n        }\n        const shapes = Utils_1.Plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = Utils_1.Plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        if (this.sourceOptions) {\n            this.options.load(this.sourceOptions);\n        }\n        this.fpsLimit = this.options.fpsLimit > 0 ? this.options.fpsLimit : 60;\n        this.options.setTheme(undefined);\n        this.eventListeners = new Utils_1.EventListeners(this);\n    }\n    play(force) {\n        const needsUpdate = this.paused || force;\n        if (this.firstStart && !this.options.autoPlay) {\n            this.firstStart = false;\n            return;\n        }\n        if (this.paused) {\n            this.paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n            this.lastFrameTime = performance.now();\n        }\n        this.draw();\n    }\n    pause() {\n        if (this.drawAnimationFrame !== undefined) {\n            Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n            delete this.drawAnimationFrame;\n        }\n        if (this.paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this.paused = true;\n        }\n    }\n    draw() {\n        this.drawAnimationFrame = Utils_1.Utils.animate((timestamp) => this.drawer.nextFrame(timestamp));\n    }\n    getAnimationStatus() {\n        return !this.paused;\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!noiseOrGenerator) {\n            return;\n        }\n        if (typeof noiseOrGenerator === \"function\") {\n            this.noise.generate = noiseOrGenerator;\n            if (init) {\n                this.noise.init = init;\n            }\n            if (update) {\n                this.noise.update = update;\n            }\n        }\n        else {\n            if (noiseOrGenerator.generate) {\n                this.noise.generate = noiseOrGenerator.generate;\n            }\n            if (noiseOrGenerator.init) {\n                this.noise.init = noiseOrGenerator.init;\n            }\n            if (noiseOrGenerator.update) {\n                this.noise.update = noiseOrGenerator.update;\n            }\n        }\n    }\n    densityAutoParticles() {\n        if (!this.options.particles.number.density.enable) {\n            return;\n        }\n        this.initDensityFactor();\n        const numberOptions = this.options.particles.number;\n        const optParticlesNumber = numberOptions.value;\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n        const particlesCount = this.particles.count;\n        if (particlesCount < particlesNumber) {\n            this.particles.push(Math.abs(particlesNumber - particlesCount));\n        }\n        else if (particlesCount > particlesNumber) {\n            this.particles.removeQuantity(particlesCount - particlesNumber);\n        }\n    }\n    destroy() {\n        this.stop();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this.destroyed = true;\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.options, undefined, 2);\n    }\n    refresh() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.stop();\n            yield this.start();\n        });\n    }\n    stop() {\n        if (!this.started) {\n            return;\n        }\n        this.firstStart = true;\n        this.started = false;\n        this.eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this.particles.linksColors = new Map();\n        delete this.particles.grabLineColor;\n        delete this.particles.linksColor;\n    }\n    loadTheme(name) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.options.setTheme(name);\n            yield this.refresh();\n        });\n    }\n    start() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (this.started) {\n                return;\n            }\n            yield this.init();\n            this.started = true;\n            this.eventListeners.addListeners();\n            for (const [, plugin] of this.plugins) {\n                if (plugin.startAsync !== undefined) {\n                    yield plugin.startAsync();\n                }\n                else if (plugin.start !== undefined) {\n                    plugin.start();\n                }\n            }\n            this.play();\n        });\n    }\n    init() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            this.retina.init();\n            this.canvas.init();\n            this.fpsLimit = this.options.fpsLimit > 0 ? this.options.fpsLimit : 60;\n            const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n            for (const [id, plugin] of availablePlugins) {\n                this.plugins.set(id, plugin);\n            }\n            for (const [, drawer] of this.drawers) {\n                if (drawer.init) {\n                    yield drawer.init(this);\n                }\n            }\n            for (const [, plugin] of this.plugins) {\n                if (plugin.init) {\n                    plugin.init(this.options);\n                }\n                else if (plugin.initAsync !== undefined) {\n                    yield plugin.initAsync(this.options);\n                }\n            }\n            this.canvas.windowResize();\n            this.particles.init();\n        });\n    }\n    initDensityFactor() {\n        const densityOptions = this.options.particles.number.density;\n        if (!this.canvas.element || !densityOptions.enable) {\n            return;\n        }\n        const canvas = this.canvas.element;\n        const pxRatio = this.retina.pixelRatio;\n        this.density =\n            (canvas.width * canvas.height) / (densityOptions.factor * pxRatio * pxRatio * densityOptions.area);\n    }\n}\nexports.Container = Container;\n"]},"metadata":{},"sourceType":"script"}