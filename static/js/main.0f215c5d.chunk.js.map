{"version":3,"sources":["data/particlesConfig.js","components/Social.js","components/Card.js","App.js","serviceWorker.js","index.js"],"names":["starsConfig","Social","className","url","Component","Card","heightTop","paddingTop","heightBottom","paddingBottom","style","marginBottom","App","backgroundColor","backgroundPosition","backgroundSize","backgroundRepeat","overflow","params","position","left","top","width","height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mUAAaA,G,YAAc,CACzB,UAAa,CACX,OAAU,CACR,MAAS,IACT,QAAW,CACT,QAAU,EACV,WAAc,MAGlB,MAAS,CACP,MAAS,WAEX,MAAS,CACP,KAAQ,SACR,OAAU,CACR,MAAS,EACT,MAAS,WAEX,QAAW,CACT,SAAY,GAEd,MAAS,CACP,IAAO,iBACP,MAAS,IACT,OAAU,MAGd,QAAW,CACT,MAAS,EACT,QAAU,EACV,KAAQ,CACN,QAAU,EACV,MAAS,EACT,YAAe,EACf,MAAQ,IAGZ,KAAQ,CACN,MAAS,EACT,QAAU,EACV,KAAQ,CACN,QAAU,EACV,MAAS,EACT,SAAY,GACZ,MAAQ,IAGZ,YAAe,CACb,QAAU,EACV,SAAY,IACZ,MAAS,UACT,QAAW,GACX,MAAS,GAEX,KAAQ,CACN,QAAU,EACV,MAAS,EACT,UAAa,OACb,QAAU,EACV,UAAY,EACZ,SAAY,MACZ,QAAU,EACV,QAAW,CACT,QAAU,EACV,QAAW,IACX,QAAW,OAIjB,cAAiB,CACf,UAAa,SACb,OAAU,CACR,QAAW,CACT,QAAU,EACV,KAAQ,UAEV,QAAW,CACT,QAAU,EACV,KAAQ,WAEV,QAAU,GAEZ,MAAS,CACP,KAAQ,CACN,SAAY,IACZ,YAAe,CACb,QAAW,IAGf,OAAU,CACR,SAAY,IACZ,KAAQ,EACR,SAAY,EACZ,QAAW,EACX,MAAS,GAEX,QAAW,CACT,SAAY,IACZ,SAAY,IAEd,KAAQ,CACN,aAAgB,GAElB,OAAU,CACR,aAAgB,KAItB,eAAiB,I,wBCzGEC,E,uKAGb,OACI,yBAAKC,UAAU,uBACX,yBAAKA,UAAS,iBAHN,SAIJ,kBAAC,aAAD,CAAYC,IAAI,mCAEpB,yBAAKD,UAAS,iBANN,SAOJ,kBAAC,aAAD,CAAYC,IAAI,uDAEpB,yBAAKD,UAAS,iBATN,SAUJ,kBAAC,aAAD,CAAYC,IAAI,0D,GAZAC,aCEfC,G,mLAEb,IAIMC,EAAY,CACdC,WAFe,OAIbC,EAAe,CACjBC,cALe,OAQnB,OACQ,yBAAKP,UAAU,qCACX,yBAAKA,UAAU,iCACf,yBAAKA,UAAU,eACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,eAAeQ,MAAOJ,GACjC,uBAAGJ,UAAU,+BAA+BQ,MAjBhD,CACZC,aAAc,QAgBE,wBAIA,uBAAGT,UAAU,wBAAb,mCAGA,uBAAGA,UAAU,uBAAuBQ,MAAOF,GACvC,kBAAC,EAAD,gB,GA3BEJ,cCkCnBQ,E,uKAdX,OACE,6BACE,6BAASV,UAAU,qBAAqBQ,MAX3B,CACfG,gBAAiB,QACjBC,mBAAoB,gBACpBC,eAAgB,QAChBC,iBAAkB,YAClBC,SAAU,WAON,kBAAC,IAAD,CAAWC,OAAQlB,EAAaU,MAnBd,CACtBS,SAAS,WACTC,KAAK,IACLC,IAAI,IACJC,MAAM,OACNC,OAAO,UAgBH,yBAAKrB,UAAU,aACb,kBAAC,EAAD,a,GAxBME,aCKEoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0f215c5d.chunk.js","sourcesContent":["export const starsConfig = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 160,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 800\n      }\n    },\n    \"color\": {\n      \"value\": \"#ffffff\"\n    },\n    \"shape\": {\n      \"type\": \"circle\",\n      \"stroke\": {\n        \"width\": 0,\n        \"color\": \"#000000\"\n      },\n      \"polygon\": {\n        \"nb_sides\": 5\n      },\n      \"image\": {\n        \"src\": \"img/github.svg\",\n        \"width\": 100,\n        \"height\": 100\n      }\n    },\n    \"opacity\": {\n      \"value\": 1,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": true,\n        \"speed\": 1,\n        \"opacity_min\": 0,\n        \"sync\": false\n      }\n    },\n    \"size\": {\n      \"value\": 3,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 4,\n        \"size_min\": 0.3,\n        \"sync\": false\n      }\n    },\n    \"line_linked\": {\n      \"enable\": false,\n      \"distance\": 150,\n      \"color\": \"#ffffff\",\n      \"opacity\": 0.4,\n      \"width\": 1\n    },\n    \"move\": {\n      \"enable\": true,\n      \"speed\": 1,\n      \"direction\": \"none\",\n      \"random\": true,\n      \"straight\": false,\n      \"out_mode\": \"out\",\n      \"bounce\": false,\n      \"attract\": {\n        \"enable\": false,\n        \"rotateX\": 600,\n        \"rotateY\": 600\n      }\n    }\n  },\n  \"interactivity\": {\n    \"detect_on\": \"canvas\",\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"bubble\"\n      },\n      \"onclick\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"grab\": {\n        \"distance\": 400,\n        \"line_linked\": {\n          \"opacity\": 1\n        }\n      },\n      \"bubble\": {\n        \"distance\": 250,\n        \"size\": 0,\n        \"duration\": 2,\n        \"opacity\": 0,\n        \"speed\": 3\n      },\n      \"repulse\": {\n        \"distance\": 400,\n        \"duration\": 0.4\n      },\n      \"push\": {\n        \"particles_nb\": 4\n      },\n      \"remove\": {\n        \"particles_nb\": 2\n      }\n    }\n  },\n  \"retina_detect\": false\n}","import React, { Component } from 'react'\nimport { SocialIcon } from 'react-social-icons'\n\nexport default class Social extends Component {\n    render() {\n        const spacing = \"is-2\"\n        return (\n            <div className=\"columns is-centered\">\n                <div className={`column ${spacing}`}>\n                    <SocialIcon url=\"https://github.com/sripushkar\"/>\n                </div>\n                <div className={`column ${spacing}`}>\n                    <SocialIcon url=\"https://www.linkedin.com/in/sripushkar-julapally/\"/>\n                </div>\n                <div className={`column ${spacing}`}>\n                    <SocialIcon url=\"https://www.youtube.com/c/sripushkarjulapally/>\"/>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Social from \"./Social\"\nimport \"./float.css\"\nimport \"./fonts.css\"\n\nexport default class Card extends Component {\n    render() {\n        const spacing = {\n            marginBottom: '10%'\n        }\n        const paddingPer = '10%'\n        const heightTop = {\n            paddingTop: paddingPer\n        }\n        const heightBottom = {\n            paddingBottom: paddingPer\n        }\n          \n        return (    \n                <div className='container has-text-centered float'> \n                    <div className='columns is-mobile is-centered'> \n                    <div className='column is-5'> \n                        <div className=\"card\"> \n                        <div className=\"card-content\" style={heightTop}> \n                            <p className='title is-centered title-font' style={spacing}> \n                                Sripushkar Julapally\n                            </p> \n                \n                            <p className='subtitle is-centered'> \n                                Developer | Programmer | Leader\n                            </p>\n                            <p className='subtitle is-centered' style={heightBottom}>\n                                <Social/>\n                            </p>\n                \n                        </div> \n                        </div> \n                    </div> \n                    </div> \n                </div>           \n                \n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport './Bulma.sass'\nimport { starsConfig } from \"./data/particlesConfig.js\"\nimport Particles from 'react-particles-js';\nimport Card from './components/Card'\n\nclass App extends Component {\n  render() {\n    const particlesStyles = {\n      position:\"absolute\",\n      left:\"0\",\n      top:\"0\",\n      width:\"100%\",\n      height:\"100%\"\n    }\n    const bgStyles = {\n      backgroundColor: \"black\",\n      backgroundPosition: \"center center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      overflow: \"hidden\", \n      //width: \"100%\", \n      //height: \"100%\"      \n    }\n    return (\n      <div>\n        <section className=\"hero is-fullheight\" style={bgStyles}> \n          <Particles params={starsConfig} style={particlesStyles}/>     \n          \n          <div className=\"hero-body\">          \n            <Card/>\n          </div>\n        </section> \n      </div> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}